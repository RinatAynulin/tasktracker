{"version":3,"file":"serverBundle.js","sources":["webpack:///webpack/bootstrap 357bbff5f82f0bf966c0","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"prop-types\"","webpack:///external \"redux\"","webpack:///static_src/constants/apiUrls.js","webpack:///external \"react-router-redux\"","webpack:///external \"redux-api-middleware\"","webpack:///external \"react-addons-update\"","webpack:///external \"normalizr\"","webpack:///external \"react-router-dom\"","webpack:///static_src/actions/tasks.js","webpack:///static_src/actions/projects.js","webpack:///static_src/utils/schemas.js","webpack:///static_src/actions/auth.js","webpack:///static_src/actions/taskModal.js","webpack:///static_src/actions/comments.js","webpack:///static_src/components/project/Project.jsx","webpack:///external \"react-router\"","webpack:///static_src/components/task/Task.jsx","webpack:///static_src/constants/statusMapping.js","webpack:///static_src/components/user/User.jsx","webpack:///static_src/actions/serverFlag.js","webpack:///server/index.js","webpack:///external \"express\"","webpack:///external \"react-dom/server\"","webpack:///static_src/components/App.jsx","webpack:///external \"react-dom\"","webpack:///static_src/components/task/TaskBoard.jsx","webpack:///external \"react-modal\"","webpack:///static_src/components/task/TaskList.jsx","webpack:///static_src/components/task/ChangeStatus.jsx","webpack:///static_src/components/task/TaskForm.jsx","webpack:///static_src/components/comment/CommentList.jsx","webpack:///static_src/components/comment/Comment.jsx","webpack:///static_src/components/comment/CommentForm.jsx","webpack:///static_src/components/project_header/ProjectHeader.jsx","webpack:///static_src/components/login/LoginPage.jsx","webpack:///static_src/components/login/LoginForm.jsx","webpack:///static_src/components/project/ProjectPage.jsx","webpack:///static_src/components/project/ProjectList.jsx","webpack:///static_src/components/project/ProjectForm.jsx","webpack:///static_src/components/login/Logout.jsx","webpack:///static_src/components/login/PrivateRoute.jsx","webpack:///static_src/components/main_header/Header.jsx","webpack:///server/templates.js","webpack:///static_src/utils/store.js","webpack:///static_src/reducers/index.js","webpack:///static_src/reducers/tasks.js","webpack:///static_src/reducers/projects.js","webpack:///static_src/reducers/auth.js","webpack:///static_src/reducers/users.js","webpack:///static_src/reducers/comments.js","webpack:///static_src/reducers/taskModal.js","webpack:///static_src/reducers/SSR.js","webpack:///static_src/middlewares/index.js","webpack:///static_src/middlewares/headerMiddleware.js","webpack:///external \"isomorphic-fetch\"","webpack:///external \"express-http-proxy\"","webpack:///external \"cookie-parser\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/server/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 357bbff5f82f0bf966c0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 3\n// module chunks = 0","export const PAGE_SIZE = {\n\ttask: 10,\n\tcomment: 10,\n\tproject: 10,\n};\n\nexport default {\n\ttask: SERVER_URL + 'api/tasks/',\n\tproject: SERVER_URL + 'api/projects/',\n\tcomment: SERVER_URL + 'api/comment/',\n\tcurrentUser: SERVER_URL + 'api/users/current/',\n\tlogin: SERVER_URL + 'api/token-auth/',\n\tlogout: SERVER_URL + 'api/logout/',\n}\n\n\n// WEBPACK FOOTER //\n// static_src/constants/apiUrls.js","module.exports = require(\"react-router-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-redux\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"redux-api-middleware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-api-middleware\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"react-addons-update\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-addons-update\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"normalizr\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"normalizr\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 10\n// module chunks = 0","import { CALL_API, getJSON } from 'redux-api-middleware';\nimport { normalize } from 'normalizr';\n\nimport { task } from './../utils/schemas';\n\nexport const START_TASK_LOADING = 'START_TASK_LOADING';\nexport const SUCCESS_TASK_LOADING = 'SUCCESS_TASK_LOADING';\nexport const ERROR_TASK_LOADING = 'ERROR_TASK_LOADING';\n\nexport const START_ADD_TASK = 'START_ADD_TASK';\nexport const SUCCESS_ADD_TASK = 'SUCCESS_ADD_TASK';\nexport const ERROR_ADD_TASK = 'ERROR_ADD_TASK';\n\nexport const START_CHANGE_STATUS = 'START_CHANGE_STATUS';\nexport const SUCCESS_CHANGE_STATUS = 'SUCCESS_CHANGE_STATUS';\nexport const ERROR_CHANGE_STATUS = 'ERROR_CHANGE_STATUS';\n\nimport apiUrls from './../constants/apiUrls';\n\nexport const loadTasks = (url, addTasks) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: url,\n            method: 'GET',\n            types: [\n                START_TASK_LOADING,\n                {\n                    type: SUCCESS_TASK_LOADING,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                const normalizedData = normalize(json.results, [task]);\n                                delete json.results;\n                                return Object.assign({}, json, normalizedData, {addTasks});\n                            },\n                        );\n                    },\n                },\n                ERROR_TASK_LOADING,\n            ],\n        },\n    };\n};\n\nexport const addTask = (body) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: apiUrls.task,\n            method: 'POST',\n            body,\n            headers: { \n                'Content-type': 'application/json' \n            },\n            types: [\n                START_ADD_TASK,\n                {\n                    type: SUCCESS_ADD_TASK,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                json = {tasks: json};\n                                const normalizedData = normalize(json, [task]);\n                                delete json.results;\n                                return Object.assign({}, json, normalizedData);\n                            },\n                        );\n                    },\n                },\n                ERROR_ADD_TASK,\n            ],\n        },\n    };\n};\n\nexport const changeStatus = (taskId, body) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: apiUrls.task + `${taskId}/`,\n            method: 'PUT',\n            body,\n            headers: { \n                'Content-type': 'application/json' \n            },\n            types: [\n                START_CHANGE_STATUS,\n                {\n                    type: SUCCESS_CHANGE_STATUS,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                json = {tasks: json};\n                                const normalizedData = normalize(json, [task]);\n                                delete json.results;\n                                return Object.assign({}, json, normalizedData);\n                            },\n                        );\n                    },\n                },\n                ERROR_CHANGE_STATUS,\n            ],\n        },\n    };\n};\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/actions/tasks.js","import { CALL_API, getJSON } from 'redux-api-middleware';\nimport { normalize } from 'normalizr';\n\nimport { project } from './../utils/schemas';\nimport apiUrls from './../constants/apiUrls';\n\nexport const START_PROJECT_LOADING = 'START_PROJECT_LOADING';\nexport const SUCCESS_PROJECT_LOADING = 'SUCCESS_PROJECT_LOADING';\nexport const ERROR_PROJECT_LOADING = 'ERROR_PROJECT_LOADING';\n\nexport const START_ADD_PROJECT = 'START_ADD_PROJECT';\nexport const SUCCESS_ADD_PROJECT = 'SUCCESS_ADD_PROJECT';\nexport const ERROR_ADD_PROJECT = 'ERROR_ADD_PROJECT';\n\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const loadProjects = (page, addProjects) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: `${apiUrls.project}?page=${page}`,\n            method: 'GET',\n            types: [\n                START_PROJECT_LOADING,\n                {\n                    type: SUCCESS_PROJECT_LOADING,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                const normalizedData = normalize(json.results, [project]);\n                                delete json.results;\n                                return Object.assign({}, json, normalizedData, {addProjects});\n                            },\n                        );\n                    },\n                },\n                ERROR_PROJECT_LOADING,\n            ],\n        },\n    };\n};\n\n\nexport const addProject = (body) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: apiUrls.project,\n            method: 'POST',\n            body,\n            headers: { \n                'Content-type': 'application/json' \n            },\n            types: [\n                START_ADD_PROJECT,\n                {\n                    type: SUCCESS_ADD_PROJECT,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                json = {projects: json};\n                                const normalizedData = normalize(json, [project]);\n                                delete json.results;\n                                return Object.assign({}, json, normalizedData);\n                            },\n                        );\n                    },\n                },\n                ERROR_ADD_PROJECT,\n            ],\n        },\n    };\n};\n\nexport const selectProject = (selectedProject) => {\n    return {\n        type: SELECT_PROJECT,\n        selectedProject,\n    }\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/actions/projects.js","import { schema } from 'normalizr';\n\nexport const user = new schema.Entity('users');\n\nexport const project = new schema.Entity('projects', {\n\tauthor: user,\n});\n\nexport const task = new schema.Entity('tasks', {\n    assign_to: user,\n    author: user,\n    project,\n});\n\nexport const comment = new schema.Entity('comments', {\n\tauthor: user,\n\ttask: task,\n});\n\n\n// WEBPACK FOOTER //\n// static_src/utils/schemas.js","import { CALL_API, getJSON } from 'redux-api-middleware';\nimport { normalize } from 'normalizr';\n\nimport { task } from './../utils/schemas';\nimport apiUrls from './../constants/apiUrls';\n\nexport const START_LOGIN = 'START_LOGIN';\nexport const SUCCESS_LOGIN = 'SUCCESS_LOGIN';\nexport const ERROR_LOGIN = 'ERROR_LOGIN';\n\nexport const START_CURRENT_USER_LOADING = 'START_CURRENT_USER_LOADING';\nexport const SUCCESS_CURRENT_USER_LOADING = 'SUCCESS_CURRENT_USER_LOADING';\nexport const ERROR_CURRENT_USER_LOADING = 'ERROR_CURRENT_USER_LOADING';\n\nexport const START_LOGOUT = 'START_LOGOUT';\nexport const SUCCESS_LOGOUT = 'SUCCESS_LOGOUT';\nexport const ERROR_LOGOUT = 'ERROR_LOGOUT';\n\n\nexport const login = (bodyData) => {\n    return {\n        [CALL_API]: {\n            endpoint: apiUrls.login,\n            credentials: 'include',\n            method: 'POST',\n            body: bodyData,\n            headers: { 'Content-Type': 'application/json' },\n            types: [\n                START_LOGIN,\n                {\n                    type: SUCCESS_LOGIN,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                return json.token;\n                            },\n                        );\n                    },\n                },\n                {\n                    type: ERROR_LOGIN,\n                    payload: (action, state, res) => {\n                        return getJSON(res);\n                    },\n                }\n            ],\n        },\n    };\n};\n\nexport const currentUser = () => {\n    return {\n        [CALL_API]: {\n            endpoint: apiUrls.currentUser,\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            types: [\n                START_CURRENT_USER_LOADING,\n                {\n                    type: SUCCESS_CURRENT_USER_LOADING,\n                    payload: (action, state, res) => {\n                        return getJSON(res);\n                    },\n                },\n                ERROR_CURRENT_USER_LOADING,\n            ],\n        },\n    }\n}\n\nexport const logout = () => {\n    return {\n        [CALL_API]: {\n            endpoint: apiUrls.logout,\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            types: [\n                START_LOGOUT,\n                {\n                    type: SUCCESS_LOGOUT,\n                    payload: (action, state, res) => {\n                        return getJSON(res);\n                    },\n                },\n                ERROR_LOGOUT,\n            ],\n        },\n    }\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/actions/auth.js","export const CLOSE_TASK_MODAL = 'CLOSE_TASK_MODAL';\nexport const OPEN_TASK_MODAL = 'OPEN_TASK_MODAL';\n\nexport const closeModal = () => {\n    return {\n        type: CLOSE_TASK_MODAL,\n    }\n}\n\nexport const openModal = (selectedTask) => {\n    return {\n        type: OPEN_TASK_MODAL,\n        selectedTask,\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/actions/taskModal.js","import { CALL_API, getJSON } from 'redux-api-middleware';\nimport { normalize } from 'normalizr';\n\nimport { comment } from './../utils/schemas';\nimport apiUrls from './../constants/apiUrls';\n\nexport const START_COMMENT_LOADING = 'START_COMMENT_LOADING';\nexport const SUCCESS_COMMENT_LOADING = 'SUCCESS_COMMENT_LOADING';\nexport const ERROR_COMMENT_LOADING = 'ERROR_COMMENT_LOADING';\n\nexport const START_ADD_COMMENT = 'START_ADD_COMMENT';\nexport const SUCCESS_ADD_COMMENT = 'SUCCESS_ADD_COMMENT';\nexport const ERROR_ADD_COMMENT = 'ERROR_ADD_COMMENT';\n\n\nexport const loadComments = (taskId, page, addComments) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: `${apiUrls.comment}?task=${taskId}&page=${page}`,\n            method: 'GET',\n            types: [\n                START_COMMENT_LOADING,\n                {\n                    type: SUCCESS_COMMENT_LOADING,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                console.log(json);\n                                const normalizedData = normalize(json.results, [comment]); // fixme, problem with taskId\n                                return Object.assign({}, json, normalizedData, {comment});\n                            },\n                        );\n                    },\n                },\n                ERROR_COMMENT_LOADING,\n            ],\n        },\n    };\n};\n\n\nexport const addComment = (body) => {\n    return {\n        [CALL_API]: {\n            credentials: 'include',\n            endpoint: apiUrls.comment,\n            method: 'POST',\n            body,\n            headers: { \n                'Content-type': 'application/json' \n            },\n            types: [\n                START_ADD_COMMENT,\n                {\n                    type: SUCCESS_ADD_COMMENT,\n                    payload: (action, state, res) => {\n                        return getJSON(res).then(\n                            (json) => {\n                                json = {comment: json};\n                                console.log(json);\n                                const normalizedData = normalize(json, [comment]);\n                                return Object.assign({}, json, normalizedData);\n                            },\n                        );\n                    },\n                },\n                ERROR_ADD_COMMENT,\n            ],\n        },\n    };\n};\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/actions/comments.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport { selectProject } from './../../actions/projects';\n// import User from './User';\n\n\nclass Project extends React.Component {\n    static propTypes = {\n        id: PropTypes.number.isRequired,\n        author: PropTypes.number,\n        name: PropTypes.string,\n        created_at: PropTypes.string,\n        selectProject: PropTypes.func,\n    }\n\n    static defaultProps = {\n        author: null,\n        name: '',\n        created_at: '',\n    }\n\n    onClick = (e) => {\n        this.props.selectProject(this.props.id);\n    }\n\n    render() {\n        let link = `/taskList/${this.props.id}`;\n        return (\n            <div className=\"project\">\n                <div className=\"project__content\">\n                    <Link to={link} onClick={ this.onClick }>{ this.props.name }</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ projects }, ownProps) => {\n    return {\n        ...projects.projects[ownProps.id],\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => (\n    bindActionCreators({selectProject}, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\n\n\n// WEBPACK FOOTER //\n// static_src/components/project/Project.jsx","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 19\n// module chunks = 0","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\nimport ChangeStatus from './ChangeStatus';\nimport User from './../user/User';\nimport './../../styles.css';\n\nimport { openModal } from './../../actions/taskModal';\n\nclass Task extends React.Component {\n\tstatic propTypes = {\n\t\ttask: PropTypes.shape({\n\t\t\tid: PropTypes.number,\n\t\t\tdescription: PropTypes.string,\n\t\t\ttext: PropTypes.string,\n\t\t\tsection: PropTypes.number,\n\t\t\tstatus: PropTypes.number,\n\t\t\tauthor: PropTypes.number,\n\t}),\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"task\">\n\t\t\t\t\t<div className=\"task__header\">\n\t\t\t\t\t\t<div className=\"task__header-text\" onClick={() => this.props.openModal(this.props.task.id)}>{ this.props.task.text }</div>\n\t\t\t\t\t\t<div className=\"task__header-user\"> <User id={this.props.task.author}/> </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"task__content\">\n\t\t\t\t\t\t<div className=\"task__content-description\">{ this.props.task.description }</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"task__change-status\">\n\t\t\t\t\t\t<ChangeStatus taskId={this.props.task.id}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\n\nconst mapStateToProps = ({}) => {\n    return {};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ openModal }, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/task/Task.jsx","export default {\n\t'New' : 1,\n\t'In progress' : 2,\n\t'Done' : 3\n}\n\n\n// WEBPACK FOOTER //\n// static_src/constants/statusMapping.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport './../../styles.css';\n\nclass User extends React.Component {\n    static propTypes = {\n        id: PropTypes.number,\n        username: PropTypes.string,\n        email: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        avatar: PropTypes.string\n    }\n\n    static defaultProps = {\n        id: 0,\n        username: '',\n        email: '',\n        first_name: '',\n        last_name: '',\n        avatar: ''\n    }\n\n    render() {\n        return (\n            <div className=\"user\">\n                <div className=\"user__name\"> { this.props.first_name + this.props.last_name } </div>\n                <div className=\"user__avatar\"> <img src={this.props.avatar} alt=\"No avatar\"/> </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ users }, ownProps) => {\n    return {\n        ...users.users[ownProps.id],\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    // bindActionCreators({selectProject}, dispatch)\n}\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n\n\n// WEBPACK FOOTER //\n// static_src/components/user/User.jsx","import { CALL_API, getJSON } from 'redux-api-middleware';\nimport { normalize } from 'normalizr';\n\nexport const SET_SSR_FLAG = 'SET_SSR_FLAG';\n\nexport const serverFlag = () => {\n    return {\n        type: SET_SSR_FLAG,\n    };\n};\n\n\n// WEBPACK FOOTER //\n// static_src/actions/serverFlag.js","import express from 'express';\nimport React from 'react';\n\nimport { renderToString } from 'react-dom/server';\nimport App from '../static_src/components/App';\nimport template from './templates';\nimport { StaticRouter } from 'react-router'\nimport { Provider } from 'react-redux';\nimport { createElement } from 'react';\nimport initStore from '../static_src/utils/store'\nimport { headerMiddleware } from '../static_src/middlewares/headerMiddleware';\nimport 'isomorphic-fetch';\nconst expressproxy = require('express-http-proxy');\nconst cookieParser = require('cookie-parser');\n\nconst app = express();\n\nconst apiURL = 'http://138.197.187.175/';\n\napp.use(cookieParser());\n\napp.post('/api/token-auth/', expressproxy (apiURL, {\n    userResDecorator: function(proxyRes, proxyResData, userReq, userRes) {\n        console.log('token-auth');\n        if (proxyRes.statusCode >= 200 && proxyRes.statusCode < 300){\n            const data = JSON.parse(proxyResData.toString('utf8'));\n            console.log(data.token);\n            userRes.cookie('token', data.token, {httpOnly: true});\n            return JSON.stringify({status: 'ok'});\n        }\n        return proxyResData \n      }\n}));\n\napp.get('/api/logout', (req, res, next) => {\n    const key = req.cookies.token;\n    if (key) {\n        res.clearCookie(\"token\");\n    }\n    res.redirect('/login');\n});\n\napp.all('/api/*' ,(req, res, next) => {\n    const key = req.cookies.token;\n    if(key){\n        req.headers['Authorization'] = `token ${key}`;\n    } \n    next();\n})\n\napp.all('/api/*', expressproxy(apiURL))\n\napp.get('*', (req, res) => {\n    const store = initStore([headerMiddleware(req.cookies.token)]);\n    const context = {};\n    const resultServer = (value) => {\n        for (const item of value) {\n            if (!item.payload || item.error){\n                res.redirect('/login/')\n                return;\n            }\n        }\n        const resultText = renderToString(\n        createElement(Provider, { store },\n            createElement(StaticRouter, { location: req.url, context },\n                <App />)\n            )\n        );\n        const storeString = JSON.stringify(store.getState());\n\n        res.send(template({\n            body: resultText,\n            title: 'FROM THE SERVER',\n            store: storeString\n        }));\n    };\n    const promises = [];\n    const addToPromises = (promise) => {\n        promises.push(promise)\n    };\n    renderToString(\n    createElement(Provider, { store },\n        createElement(StaticRouter, { location: req.url, context },\n            <App server={ true } addToPromises={ addToPromises }/>)\n        )\n    );\n    return Promise.all(promises).then(value => resultServer(value));\n});\n\nconst port = 3000;\napp.listen(port);\nconsole.log(`Listening on port ${port}`);\n\n\n// WEBPACK FOOTER //\n// server/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 26\n// module chunks = 0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport apiUrls from './../constants/apiUrls';\nimport TaskBoard from './task/TaskBoard';\nimport LoginPage from './login/LoginPage';\nimport ProjectPage from './project/ProjectPage';\nimport Logout from './login/Logout';\nimport PrivateRoute from './login/PrivateRoute';\nimport Header from './main_header/Header';\nimport { currentUser } from './../actions/auth';\nimport { serverFlag } from './../actions/serverFlag';\n\n\nimport './../styles.css';\n\nclass App extends React.Component {\n\n\tstatic propTypes = {\n\t\tserver: PropTypes.bool,\n\t\tcurrentUser: PropTypes.func,\n\t\tredirectToLogin: PropTypes.func,\n\t\tisLoading: PropTypes.bool,\n\t\taddToPromises: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n        server: false,\n        addToPromises: () => {},\n    };\n\n\tstate = {\n\t\tprojectList: [],\n\t\tcurrentUser: {},\n\t\tisLoading: false\n\t}; \n\n\tcomponentDidMount() {\n\t\tthis.setState({isLoading: true});\n\t\tthis.props.serverFlag();\n\t}\n\t\n\tcomponentWillMount() {\n\t\tthis.props.currentUser();\n\t}\n\n\trender() {\n\t\tconst MyProjectPage = (props) => {\n\t\t\treturn (<ProjectPage server={ this.props.server } addToPromises={ this.props.addToPromises }/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"root-div\">\n\t\t\t\t<Header currentUser={this.state.currentUser}/>\n                <Switch>\n                    <PrivateRoute path=\"/tasklist/:projectId\" component={ TaskBoard } />\n                    <PrivateRoute exact path=\"/\" component={ MyProjectPage }/>\n                    <Route exact path=\"/login/\" component= { LoginPage }/>\n                    <Route exact path=\"/logout/\" component = { Logout }/>\n                </Switch>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ auth }) => {\n        return {\n            isLoading: auth.user.isLoading,\n        };\n    // }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return Object.assign({\n    \tredirectToLogin: () => dispatch(push('/login')),\n    \tredirectToProjects: () => dispatch(push('/projects')),\n    }, bindActionCreators({ currentUser, serverFlag }, dispatch));\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\n// export default App;\n\n\n// WEBPACK FOOTER //\n// static_src/components/App.jsx","module.exports = require(\"react-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom\"\n// module id = 28\n// module chunks = 0","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators, push } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactModal from 'react-modal';\n\nimport TaskList from './TaskList';\nimport Task from './Task';\nimport CommentList from './../comment/CommentList';\nimport ProjectHeader from './../project_header/ProjectHeader';\n\nimport { closeModal } from './../../actions/taskModal';\nimport { loadTasks } from './../../actions/tasks';\nimport { selectProject } from './../../actions/projects';\n\nimport apiUrls from './../../constants/apiUrls';\n\nimport './../../styles.css';\n\nconst listNames = ['New', 'In progress', 'Done'];\n\nclass TaskBoard extends React.Component {\n\n\tstatic propTypes = {\n\t\tisLoading: PropTypes.bool,\n\t\tloadTasks: PropTypes.func.isRequired,\n\t\tselectedProject: PropTypes.number,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.selectProject(this.props.match.params.projectId);\n\t\tthis.props.loadTasks(apiUrls.task + `?project=${this.props.match.params.projectId}`, false);\n\t}\n\n\trender() {\n\t\t// if (this.props.isLoading) {\n\t\t// \treturn <div className=\"task-board\">Loading...</div>;\n\t\t// }\n\t\tif (this.props.selectedProject <= 0) {\n\t\t\treturn <div className=\"task-board\">Select project, pls</div>;\n\t\t}\n\t\tconst taskLists = listNames.map(\n\t\t\t(listName, i) => (\n\t\t\t\t<div className=\"task-board-row\">\n\t\t\t\t\t<TaskList key={i} listName={listName}/>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t);\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<ProjectHeader/>\n\t\t\t\t\t<ReactModal className=\"modal-content\" isOpen={this.props.showModal} onRequestClose={this.props.closeModal} contentLabel=\"Minimal Modal Example\">\n\n                      \t  <Task task={this.props.selectedTask}/>\n                      \t  <CommentList/>\n\n                    </ReactModal>\n\t\t\t\t\t<div className=\"task-board\">\n\t\t\t\t\t\t\t{taskLists}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks, projects, taskModal }) => {\n    return {\n        isLoading: tasks.isLoading,\n        selectedProject: projects.selectedProject,\n        showModal: taskModal.showModal,\n        selectedTask: tasks.tasks[taskModal.selectedTask],\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ loadTasks, closeModal, selectProject }, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskBoard);\n\n\n// WEBPACK FOOTER //\n// static_src/components/task/TaskBoard.jsx","module.exports = require(\"react-modal\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-modal\"\n// module id = 30\n// module chunks = 0","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport statusMapping from './../../constants/statusMapping'\nimport { loadTasks } from './../../actions/tasks';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { PAGE_SIZE } from './../../constants/apiUrls';\nimport './../../styles.css';\n\n\nclass TaskList extends React.Component {\n\n\tstatic propTypes = {\n\t\tlistName: PropTypes.string,\n\t\ttasks: PropTypes.arrayOf(PropTypes.shape(Task.propTypes)),\n\t}; \n\n\tstatic defaultProps = {\n\t\tlistName: '',\n\t\ttasks: [],\n\t}\n\n\tonScroll = (e) => {\n\t\tif (this.props.isLoading) {\n\t\t\treturn;\n\t\t}\n\t\tlet loadNext = e.target.scrollTop + e.target.offsetHeight == e.target.scrollHeight;\n\t\tif (loadNext) {\n\t\t\tlet page = Math.ceil(this.props.taskList.length / PAGE_SIZE.task) + 1;\n\t\t\tthis.props.loadTasks(apiUrls.task + `?page=${page}&project=${this.props.projectId}`, true);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst tasks = this.props.tasks.map(\n\t\t\titem => {\n\t\t\t\treturn <Task key={item.id} task={item}/>;\n\t\t\t}\n\t\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2> {this.props.listName} </h2>\n\t\t\t\t<TaskForm status={this.props.status} projectId={this.props.projectId}/>\n\n\t\t\t\t<div className=\"task-list\" onScroll={this.onScroll}>\n\t\t\t\t\t{tasks}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks, projects }, ownProps) => {\n\t\tconst tasksToShow = [];\n\t\tconst taskList = []; // ids\n\t\tconst status = statusMapping[ownProps.listName];\n\t\ttasks.taskList.map(\n\t\t\ttaskId => {\n\t\t\t\tlet task = tasks.tasks[taskId];\n\t\t\t\tif (task.status == status) {\n\t\t\t\t\ttasksToShow.push(task);\n\t\t\t\t\ttaskList.push(task.id);\n\t\t\t\t}\n\t\t\t});\n\t\treturn {\n\t\t\tlistName: ownProps.listName, \n\t\t\ttasks: tasksToShow,\n\t\t\ttaskList,\n\t\t\tprojectId: projects.selectedProject,\n\t\t\tstatus,\n\t\t};\n\t// }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\t   return bindActionCreators({ loadTasks }, dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n\n\n// WEBPACK FOOTER //\n// static_src/components/task/TaskList.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport { changeStatus } from './../../actions/tasks';\nimport statusMapping from './../../constants/statusMapping'\n\nconst STATUS_LIST = ['New', 'In progress', 'Done'];\n\nclass ChangeStatus extends React.Component {\n    static propTypes = {\n        changeStatus: PropTypes.func,\n        taskId: PropTypes.number,\n        authorId: PropTypes.number,\n        project_id: PropTypes.number,\n        text: PropTypes.string,\n        userId: PropTypes.number,\n        status: PropTypes.number,\n    };\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onClick = (event, status) => {\n        const body = JSON.stringify({\n            taskId: this.props.taskId, \n            status, \n            project_id: this.props.project_id, \n            text: this.props.text});\n\n        this.props.changeStatus(this.props.taskId, body)\n        return false;\n    }\n\n    render() {\n        const statuses = STATUS_LIST.map(\n            (status) => <li key={statusMapping[status]}><a onClick={(e)=>this.onClick(event, statusMapping[status])}>{status}</a></li>\n        );\n        return (\n            <div className=\"task-form\">\n                <form>\n                    {this.props.authorId == this.props.userId ? (statuses) : ''}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ tasks, auth }, ownProps) => {\n        return {\n            userId: auth.user.user.id,\n            authorId: tasks.tasks[ownProps.taskId].author,\n            status: tasks.tasks[ownProps.taskId].status,\n            text: tasks.tasks[ownProps.taskId].text,\n            project_id: tasks.tasks[ownProps.taskId].project,\n        };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ changeStatus }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeStatus);\n\n\n// WEBPACK FOOTER //\n// static_src/components/task/ChangeStatus.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { addTask } from './../../actions/tasks';\n\nclass TaskForm extends React.Component {\n    static propTypes = {\n        addTask: PropTypes.func,\n        idLoading: PropTypes.bool,\n        projectId: PropTypes.number,\n        status: PropTypes.number,\n    };\n\n    \n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n        if (this.props.isLoading) {\n            return;\n        }\n\n        const body = JSON.stringify(this.state);\n\n        this.props.addTask(body);\n        this.setState({text: '', description: '',})\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            description: '',\n            assign_to_id: 1,\n            project_id: props.projectId,\n            status: props.status,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"task-form\">\n                <form>\n                    <div className=\"task-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.text } className=\"task-form-field\" type=\"text\" name=\"text\" placeholder=\"Text\" />\n                    </div>\n                    <div className=\"task-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.description } className=\"task-form-field\" type=\"text\" name=\"description\" placeholder=\"description\" />\n                    </div>\n                    <div className=\"task-field-wrapper\">\n                        <button onClick={ this.onClick }>Add</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ tasks }) => {\n        return {\n            isLoading: tasks.form.isLoading,\n        };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addTask }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n\n\n// WEBPACK FOOTER //\n// static_src/components/task/TaskForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { loadComments } from './../../actions/comments';\nimport { PAGE_SIZE } from './../../constants/apiUrls';\n\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\n\nclass CommentList extends React.Component {\n    static propTypes = {\n        isLoading: PropTypes.bool,\n        commentList: PropTypes.arrayOf(PropTypes.number),\n        loadComments: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        commentList: [],\n        isLoading: false,\n    }\n\n    onScroll = (e) => {\n        if (this.props.isLoading) {\n            return;\n        }\n        let loadNext = e.target.scrollTop + e.target.offsetHeight == e.target.scrollHeight;\n\n        if (loadNext) {\n            let page = Math.ceil(this.props.commentList.length / PAGE_SIZE.comment) + 1;\n            this.props.loadComments(this.props.taskId, page, true);\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadComments(this.props.taskId, 1, false);\n    }\n\n    render() {\n        \n        const comments = this.props.commentList.map(\n            id => <Comment key={ id } id={ id } />,\n        );\n        return (\n            <div className=\"comment-list\" onScroll={this.onScroll}>\n                <CommentForm/>\n                { comments }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ comments, taskModal }) => {\n    return {\n        commentList: comments.commentList,\n        isLoading: comments.isLoading,\n        taskId: taskModal.selectedTask,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ loadComments }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentList);\n\n\n// WEBPACK FOOTER //\n// static_src/components/comment/CommentList.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport User from './../user/User';\nimport './../../styles.css';\n\nclass Comment extends React.Component {\n\tstatic propTypes = {\n\t\tid: PropTypes.number,\n\t\tauthor: PropTypes.number,\n\t\ttext: PropTypes.string,\n\t\ttask: PropTypes.number,\n\t};\n\n\tstatic defaultProps = {\n\t\tauthor: null, \n\t\ttask: null,\n\t\ttext: '',\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"comment\">\n\t\t\t\t\t<div className=\"comment__header\">\n\t\t\t\t\t\t<div className=\"comment__header-user\"> <User id={this.props.author}/> </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"comment__content\">\n\t\t\t\t\t\t<div className=\"comment__content-text\">{ this.props.text }</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\n\nconst mapStateToProps = ({comments}, ownProps) => {\n    return {\n    \t...comments.comments[ownProps.id]\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {};\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/comment/Comment.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { addComment } from './../../actions/comments';\n\nclass CommentForm extends React.Component {\n    static propTypes = {\n        addComent: PropTypes.func,\n        idLoading: PropTypes.bool,\n        taskId: PropTypes.number,\n    };\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n\n        const body = JSON.stringify(this.state);\n\n        this.props.addComment(body);\n        this.setState({text: '',})\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            task: this.props.task,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"comment-form\">\n                <form>\n                    <div className=\"comment-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.text } className=\"comment-form-field\" type=\"text\" name=\"text\" placeholder=\"Text\" />\n                        <div className=\"comment-field-wrapper\">\n                            <button onClick={ this.onClick }>Add</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ taskModal }) => {\n        return {task: taskModal.selectedTask};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addComment }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentForm);\n\n\n// WEBPACK FOOTER //\n// static_src/components/comment/CommentForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Project from './../project/Project';\nimport './../../styles.css';\n\nclass ProjectHeader extends React.Component {\n\tstatic propTypes = {\n\t\tproject: PropTypes.shape(Project.PropTypes),\n\t};\n\n\tstatic defaultProps = {\n\t\tproject: {},\n\t};\n\n\trender() {\n\t\tlet projectName = '';\n\t\tif (this.props.project) {\n\t\t\tprojectName = this.props.project.name;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"project-header\">\n\t\t\t\t<a className=\"project-header__name\"> {projectName} </a>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks, projects }) => {\n    return {\n        project: projects.projects[projects.selectedProject],\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {return {};}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectHeader);\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/project_header/ProjectHeader.jsx","import React from 'react';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"login-page\">\n\t\t\t\t<h2> Login Form </h2>\n\t\t\t\t<LoginForm/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoginPage;\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/login/LoginPage.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { login, currentUser } from './../../actions/auth';\n\nclass LoginForm extends React.Component {\n    static propTypes = {\n        isLoading: PropTypes.bool,\n        redirect: PropTypes.func,\n        login: PropTypes.func,\n    };\n\n    state = {\n        username: '',\n        password: '',\n    };\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n        if (this.props.isLoading) {\n            return;\n        }\n\n        const body = JSON.stringify(this.state);\n\n        console.log(`login request with body ${body}`);\n\n        this.props.login(body).then(() => \n            this.props.currentUser().then(() => \n                this.props.redirect()));\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return (<p> Logging in...</p>);\n        }\n\n        return (\n            <div className=\"login-form\">\n                <form>\n                    <div className=\"login-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.username } className=\"login-form-field\" type=\"text\" name=\"username\" placeholder=\"Username\" />\n                    </div>\n                    <div className=\"login-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.password } className=\"login-form-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </div>\n                    <div className=\"login-field-wrapper\">\n                        <button onClick={ this.onClick }>Login</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ auth }) => {\n        return {\n            isLoading: auth.isLoading,\n            // isAuthenticated: auth.authentication.isAuthenticated,\n        };\n    // }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return Object.assign({}, bindActionCreators({ login, currentUser }, dispatch), \n        {redirect: () => (dispatch(push('/')))});\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\n\n// WEBPACK FOOTER //\n// static_src/components/login/LoginForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProjectList from './ProjectList';\nimport ProjectForm from './ProjectForm';\n\nclass ProjectPage extends React.Component {\n\n\tstatic propTypes = {\n\t\tserver: PropTypes.bool,\n\t\taddToPromises: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tserver: false,\n\t\taddToPromises: () => {},\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"project-page\">\n\t\t\t\t<h2> My Projects </h2>\n\t\t\t\t<ProjectForm/>\n\t\t\t\t<ProjectList server={ this.props.server } addToPromises={ this.props.addToPromises }/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProjectPage;\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/project/ProjectPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { bindActionCreators, push } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadProjects } from './../../actions/projects';\nimport Project from './Project';\nimport { PAGE_SIZE } from './../../constants/apiUrls';\nimport './../../styles.css';\n\nclass ProjectList extends React.Component {\n\n\tstatic propTypes = {\n\t\tisLoading: PropTypes.bool,\n\t\tprojectList: PropTypes.arrayOf(PropTypes.number),\n\t\tloadProjects: PropTypes.func.isRequired,\n\t\tserver: PropTypes.bool,\n\t\taddToPromises: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tisLoading: false,\n\t\tprojectList: [],\n\t\tserver: false,\n\t\taddToPromises: () => {},\n\t};\n\n\n\tonScroll = (e) => {\n\t\tif (this.props.isLoading) {\n\t\t\treturn;\n\t\t}\n\t\tlet loadNext = e.target.scrollTop + e.target.offsetHeight == e.target.scrollHeight;\n\t\tif (loadNext) {\n\t\t\tlet page = Math.ceil(this.props.projectList.length / PAGE_SIZE.project) + 1;\n\t\t\tthis.props.loadProjects(page, true);\n\t\t}\n\t}\n\n\tonClick = (e) => {\n\t\tif (this.props.isLoading) {\n\t\t\treturn;\n\t\t}\n\t\tlet page = Math.ceil(this.props.projectList.length / PAGE_SIZE.project) + 1;\n\t\tthis.props.loadProjects(page, true);\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif (SERVER) {\n\t\t\tthis.props.addToPromises(this.props.loadProjects(1, false));\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.props.isServerRendering) {\n\t\t\tthis.props.loadProjects(1, false);\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.props.isLoading) {\n\t\t\treturn <div className=\"project-list\">Loading...</div>;\n\t\t}\n\t\tconst projects = this.props.projectList.map(\n\t\t\t(projectId) => (\n\t\t\t\t<Project key={projectId} id={projectId}/>\n\t\t\t\t)\n\t\t\t);\n\t\t\n\t\treturn (\n\t\t\t\t<div className=\"project-list\" onScroll={this.onScroll}>\n\t\t\t\t\t\t{projects}\n\t\t\t\t\t\t<button onClick={this.onClick}>Load more</button>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ SSR, projects }) => {\n    return {\n        isLoading: projects.isLoading,\n        projectList: projects.projectList,\n        isServerRendering: SSR.serverRendering,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ loadProjects }, dispatch);\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectList);\n\n\n// WEBPACK FOOTER //\n// static_src/components/project/ProjectList.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { addProject } from './../../actions/projects';\n\nclass ProjectForm extends React.Component {\n    static propTypes = {\n        isLoading: PropTypes.bool,\n        addProject: PropTypes.func,\n    };\n\n    state = {\n        name: '',\n    };\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n        if (this.props.isLoading) {\n            return;\n        }\n\n        const body = JSON.stringify(this.state);\n\n        this.props.addProject(body);\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return (<p> Loading</p>);\n        }\n\n        return (\n            <div className=\"project-form\">\n                <form>\n                    <div className=\"project-field-wrapper\">\n                        <input onChange={ this.onChange } value={ this.state.name } className=\"project-form-field\" type=\"text\" name=\"name\" placeholder=\"Name\" />\n                    </div>\n                    <div className=\"project-field-wrapper\">\n                        <button onClick={ this.onClick }>Add</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ projects }) => {\n        return {\n            isLoading: projects.isLoading,\n        };\n    // }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ addProject }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\n\n\n// WEBPACK FOOTER //\n// static_src/components/project/ProjectForm.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport apiUrls from './../../constants/apiUrls';\nimport { logout } from './../../actions/auth';\n\nclass Logout extends React.Component {\n    static propTypes = {\n        redirectToLogin: PropTypes.func,\n        logout: PropTypes.func,\n    };\n\n    componentWillMount() {\n        this.props.logout().then(() =>\n            this.props.redirectToLogin());\n    }\n\n    render() {\n        return null;\n    }\n}\n\nconst mapStateToProps = () => {return {}};\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        redirectToLogin: () => dispatch(push('/login')), \n        logout: () => dispatch(logout())\n    });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n\n\n// WEBPACK FOOTER //\n// static_src/components/login/Logout.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    (\n      <Component {...props}/>\n    )\n    \n  )}/>\n)\n\nconst mapStateToProps = ({ auth }) => {\n        return {\n            // isAuthenticated: auth.authentication.isAuthenticated,\n        };\n    // }\n};\n\nconst mapDispatchToProps = (dispatch) => {return {}};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);\n\n\n\n// WEBPACK FOOTER //\n// static_src/components/login/PrivateRoute.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { bindActionCreators, push } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Project from './../project/Project';\n\nimport './../../styles.css';\n\nclass Header extends React.Component {\n\tstatic propTypes = {\n\t\tcurrentUser: PropTypes.shape({\n\t\t\t\tid: PropTypes.number,\n\t\t\t\tfirst_name: PropTypes.string,\n\t\t\t\tlast_name: PropTypes.string,\n\t\t\t\tavatar: PropTypes.string,\n\t\t\t\temail: PropTypes.string,\n\t\t\t\tusername: PropTypes.string,\n\t\t\t}),\n\t};\n\n\trender() {\n\t\tconst currentUser = (this.props.currentUser.first_name) ? <p> {this.props.currentUser.first_name + ' ' + this.props.currentUser.last_name} </p> : <p>Anonymous</p>;\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"header__element\">\n\t\t\t\t\t<a href=\"/\"> TSKTRCKR </a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__element\">\n\t\t\t\t\t\t<Link to=\"/\">All projects</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__element-right\">\n\t\t\t\t\t\t<Link to=\"/login\">Log in</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__element-right\">\n\t\t\t\t\t\t<Link to=\"/logout\"> Logout </Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__element-right\">\n\t\t\t\t\t{currentUser}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ auth }) => {\n\tif (auth.user.user)\n\t    return {\n\t        currentUser: auth.user.user,\n\t    };\n\telse {\n\t\treturn {};\n\t}\n}\n\nconst mapDispatchToProps = () => {return {};};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\n\n// WEBPACK FOOTER //\n// static_src/components/main_header/Header.jsx","export default ({ body, title, store }) => {\n  return `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>${title}</title>\n        <script>\n          window.__REDUX__SERVER__STORE__ = '${store}'\n          </script>\n      </head>\n      <body>\n        <div id=\"root\">${body}</div>\n        <script src=\"/static/build/index.js\"></script>\n      </body>\n    </html>\n  `;\n};\n\n\n// WEBPACK FOOTER //\n// server/templates.js","import { createStore, applyMiddleware, compose } from 'redux';\nimport initReducers from './../reducers';\nimport middlewares from './../middlewares';\n\nfunction initStore(additionalMiddlewares = []) {\n\t// const innitialStore = {};\n //    return createStore(\n //        initReducers,\n //        innitialStore,\n //        compose(\n //            applyMiddleware(...additionalMiddlewares, ...middlewares),\n //            window.__REDUX_DEVTOOLS_EXTENSION__(),\n //        ),\n //    );\n\n\n\n    let initialStore = {};\n    if ( !SERVER && window.__REDUX__SERVER__STORE__ ){\n        initialStore = JSON.parse(window.__REDUX__SERVER__STORE__);\n    }\n    const enhancerList = [applyMiddleware(...additionalMiddlewares, ...middlewares),];\n    if (typeof(window) != 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__()){\n        enhancerList.push(window.__REDUX_DEVTOOLS_EXTENSION__())\n    }\n    const enhancers = compose(\n        ...enhancerList\n    );\n    let store = createStore( initReducers, initialStore, enhancers );\n    return store\n}\n\nexport default initStore;\n\n\n// WEBPACK FOOTER //\n// static_src/utils/store.js","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport tasks from './tasks';\nimport projects from './projects';\nimport auth from './auth';\nimport users from './users';\nimport comments from './comments';\nimport taskModal from './taskModal';\nimport SSR from './SSR';\n\nconst appReducer = combineReducers({\n\trouterReducer,\n\ttasks,\n\tprojects,\n\tusers,\n\tcomments,\n\ttaskModal,\n\tauth, \n\tSSR\n});\n\nconst rootReducer = (state, action) => {\n\tif (action.type === 'LOGOUT') {\n\t\tstate = undefined;\n\t\t// localStorage.removeItem('auth-token');\n\t}\n\treturn appReducer(state, action)\n};\n\nexport default rootReducer;\n\n\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/index.js","import update from 'react-addons-update';\nimport { START_TASK_LOADING, SUCCESS_TASK_LOADING, ERROR_TASK_LOADING, \n        START_ADD_TASK, SUCCESS_ADD_TASK, ERROR_ADD_TASK,\n        START_CHANGE_STATUS, SUCCESS_CHANGE_STATUS, ERROR_CHANGE_STATUS} from './../actions/tasks';\n\nconst initialState = {\n    taskList: [],\n    tasks: {},\n    isLoading: false,\n    form: {\n        isLoading: false,\n    }\n};\n\n\nexport default function tasks(store = initialState, action) {\n    let newStore = store;\n    if (action.payload && action.payload.entities && action.payload.entities.tasks) {\n        newStore = update(store, {\n            tasks: { $merge: action.payload.entities.tasks },\n        });\n    }\n\n    switch (action.type) {\n        case START_TASK_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: true },\n            });\n        }\n        case SUCCESS_TASK_LOADING: {\n            if (action.payload.addTasks) {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    taskList: { $push: action.payload.result },\n                });\n            } else {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    taskList: { $set: action.payload.result },\n                });\n            }\n        }\n        case ERROR_TASK_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n        case START_ADD_TASK: {\n            return update(newStore, {\n                form: {isLoading: { $set: true }},\n            });\n        }\n        case SUCCESS_ADD_TASK: {\n            return update(newStore, {\n                form: {isLoading: { $set: false }},\n                taskList: { $push: action.payload.result },\n            });\n        }\n        case ERROR_ADD_TASK: {\n            return update(newStore, {\n                form: {isLoading: { $set: false }},\n            });\n        }\n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/tasks.js","import update from 'react-addons-update';\nimport { START_PROJECT_LOADING, SUCCESS_PROJECT_LOADING, ERROR_PROJECT_LOADING,\n        START_ADD_PROJECT, SUCCESS_ADD_PROJECT, ERROR_ADD_PROJECT, SELECT_PROJECT } from './../actions/projects';\n\n\nconst initialState = {\n    projectList: [],\n    projects: {},\n    isLoading: false,\n    selectedProject: 0,\n    size: 0,\n    previous: '',\n    next: '',\n};\n\n\nexport default function projects(store = initialState, action) {\n    let newStore = store;\n    if (action.payload && action.payload.entities && action.payload.entities.projects) {\n        newStore = update(store, {\n            projects: { $merge: action.payload.entities.projects },\n        });\n    }\n\n    switch (action.type) {\n        case START_PROJECT_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: true },\n            });\n        }\n        case SUCCESS_PROJECT_LOADING: {\n             if (action.payload.addProjects) {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    projectList: { $push: action.payload.result },\n                });\n            } else {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    projectList: { $set: action.payload.result },\n                });\n            }   \n        }\n\n        case ERROR_PROJECT_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n        case START_ADD_PROJECT: {\n            return update(newStore, {\n                isLoading: { $set: true },\n            });\n        }\n        case SUCCESS_ADD_PROJECT: {\n            return update(newStore, {\n                isLoading: { $set: false },\n                projectList: { $push: action.payload.result },\n            });\n        }\n        case ERROR_ADD_PROJECT: {\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n        case SELECT_PROJECT: {\n            return update(newStore, {\n                selectedProject: { $set: action.selectedProject },\n            });\n        }\n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/projects.js","import update from 'react-addons-update';\nimport { push } from 'react-router-redux';\n\nimport { START_LOGIN, SUCCESS_LOGIN, ERROR_LOGIN, START_CURRENT_USER_LOADING,\n    SUCCESS_CURRENT_USER_LOADING, ERROR_CURRENT_USER_LOADING, START_LOGOUT } from './../actions/auth';\n\nconst getInitialState = () => {\n    // const token = localStorage.getItem('auth-token');\n    // let isAuthenticated = false;\n    // if (token) {\n    //     isAuthenticated = true;\n    // } // fixme \n    // const authentication = {isAuthenticated, token}\n\n    return {\n        user: {user: {}, isLoading: false,},\n        isLoading: false,\n        // authentication\n    };\n}\n\nexport default function auth(store = getInitialState(), action) {\n    let newStore = store;\n\n    switch (action.type) {\n        case START_LOGIN: {\n            return update(newStore, {\n                isLoading: { $set: true },\n            });\n        }\n        case SUCCESS_LOGIN: {\n            // localStorage.setItem('auth-token', token);\n\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n        case ERROR_LOGIN: {\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n\n        case START_CURRENT_USER_LOADING: {\n            return update(newStore, {\n                user: {isLoading: { $set: true }},\n            });\n        }\n        case SUCCESS_CURRENT_USER_LOADING: {\n            return update(newStore, {\n                user: {user: {$set: action.payload }, isLoading: { $set: false }},\n            })\n        }\n        case ERROR_CURRENT_USER_LOADING: {\n            return update(newStore, {\n                user: {isLoading: { $set: false }},\n            });\n        }\n\n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/auth.js","import update from 'react-addons-update';\n// import {  } from './../actions/users';\n\n\nconst initialState = {\n    usersList: [],\n    users: {},\n    isLoading: false,\n};\n\n\nexport default function projects(store = initialState, action) {\n    let newStore = store;\n    if (action.payload && action.payload.entities && action.payload.entities.users) {\n        newStore = update(store, {\n            users: { $merge: action.payload.entities.users },\n        });\n    }\n\n    switch (action.type) {\n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/users.js","import update from 'react-addons-update';\nimport { START_COMMENT_LOADING, SUCCESS_COMMENT_LOADING, ERROR_COMMENT_LOADING, \n        START_ADD_COMMENT, SUCCESS_ADD_COMMENT, ERROR_ADD_COMMENT,} from './../actions/comments';\n\nconst initialState = {\n    commentList: [],\n    comments: {},\n    isLoading: false,\n};\n\n\nexport default function comments(store = initialState, action) {\n    let newStore = store;\n    if (action.payload && action.payload.entities && action.payload.entities.comments) {\n        newStore = update(store, {\n            comments: { $merge: action.payload.entities.comments },\n        });\n    }\n\n    switch (action.type) {\n        case START_COMMENT_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: true },\n            });\n        }\n        case SUCCESS_COMMENT_LOADING: {\n            if (action.payload.addComments) {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    commentList: { $push: action.payload.result },\n                });\n            } else {\n                return update(newStore, {\n                    isLoading: { $set: false },\n                    commentList: { $set: action.payload.result },\n                });\n            }\n        }\n        case ERROR_COMMENT_LOADING: {\n            return update(newStore, {\n                isLoading: { $set: false },\n            });\n        }\n        case SUCCESS_ADD_COMMENT: {\n            console.log(action.payload);\n            return update(newStore, {\n                commentList: { $push: action.payload.result },\n            });\n        }\n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/comments.js","import update from 'react-addons-update';\nimport { CLOSE_TASK_MODAL, OPEN_TASK_MODAL } from './../actions/taskModal';\n\n\nconst initialState = {\n    showModal: false,\n    selectedTask: 0,\n};\n\n\nexport default function taskModal(store = initialState, action) {\n    let newStore = store;\n\n    switch (action.type) {\n        case CLOSE_TASK_MODAL: {\n            return update(newStore, {\n                showModal: { $set: false },\n            });\n        }\n        case OPEN_TASK_MODAL: {\n            return update(newStore, {\n                showModal: { $set: true },\n                selectedTask: { $set: action.selectedTask },\n            });\n        }\n        \n        default:\n            return newStore;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/taskModal.js","import update from 'react-addons-update';\nimport { SET_SSR_FLAG } from './../actions/serverFlag';\n\n\nconst initialState = {\n};\n\n\nexport default function SSR(store = initialState, action) {\n    let newStore = store;\n    if ( SERVER ){\n        newStore = {\n            serverRendering: true,\n        }\n    }\n    switch (action.type) {\n        case SET_SSR_FLAG: {\n            return update(newStore, {\n                serverRendering: { $set: false }\n            });\n        }\n        default:\n            return newStore;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// static_src/reducers/SSR.js","import { apiMiddleware } from 'redux-api-middleware';\n\nexport default [\n    apiMiddleware,\n];\n\n\n// WEBPACK FOOTER //\n// static_src/middlewares/index.js","import { isRSAA, CALL_API } from 'redux-api-middleware';\n\n// создаем функцию принимающую токе и возвращающую мидлварь, что бы добавлять Authorization хедер к нащим\n// запросам от сервера\nexport const headerMiddleware = token => store => next => (action) => {\n    if (isRSAA(action)){\n        action[CALL_API]['headers'] = { 'Authorization': `token ${token}` };\n    }\n    return next(action);\n};\n\n\n// WEBPACK FOOTER //\n// static_src/middlewares/headerMiddleware.js","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 58\n// module chunks = 0","module.exports = require(\"express-http-proxy\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-http-proxy\"\n// module id = 59\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 60\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;ACNA;;;;;;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AACA;AACA;AACA;AAaA;AACA;;;;;;;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAVA;AANA;AAsBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAXA;AAVA;AA2BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAXA;AAVA;AA2BA;;;;;;;;;;;;;;ACzGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAVA;AANA;AAsBA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAXA;AAVA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;ACdA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AARA;AAWA;AACA;AACA;AACA;AAJA;AAlBA;AA2BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAJA;AATA;AAmBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAJA;AATA;AAmBA;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;ACdA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAVA;AANA;AAsBA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAXA;AAVA;AA2BA;;;;;;;;;;;;;;;;;ACvEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAeA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAMA;;;;AA5BA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AACA;AAHA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;ACpDA;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AARA;AAaA;;;;AA3BA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AACA;AACA;AA4BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;AACA;;;;;;;;;;;AAmBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;AA1BA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AACA;AAkBA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAIA;;;;;;;;;;;;;;ACjDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;ACTA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3FA;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAEA;AACA;;;;;;;;;AACA;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AAHA;;;;;AAMA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAUA;;;;AA9CA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AAFA;AACA;AACA;AAqCA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;;;ACzFA;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;;;;;;;;;AACA;AACA;AACA;;;AAQA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AADA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AADA;AARA;AAaA;;;;AA7CA;AACA;AADA;AAGA;AACA;AACA;AAHA;AACA;AACA;AA4CA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;ACnFA;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;AACA;AACA;;;;;;;;;AAEA;;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAJA;AAUA;;;;AAzCA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AAFA;AACA;AACA;AAmCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACtFA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AArCA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AACA;AAqCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjEA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AA0BA;AAAA;AACA;AADA;AACA;AADA;AAfA;AACA;AACA;AAaA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AADA;AAcA;;;;AArDA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AACA;AACA;AAqDA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3EA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAKA;;;;AAvCA;AACA;AADA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAFA;AACA;AACA;AAkCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;ACnEA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;;;;;;;AACA;;;;;;;;;;;AAcA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AASA;;;;AAzBA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AAHA;AACA;AACA;AAmBA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;AChDA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AAoBA;AAAA;AACA;AADA;AACA;AADA;AAZA;AACA;AACA;AAUA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AADA;AADA;AAWA;;;;AAzCA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AACA;AAyCA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7DA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;;;;;;;AACA;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;AAnBA;AACA;AADA;AAEA;AADA;AADA;AAMA;AADA;AACA;AACA;AAeA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;;;;AATA;AACA;AAWA;;;;;;;;;;;;;;;ACfA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAOA;AACA;AACA;AAFA;AAMA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AADA;AAcA;;;;AAnDA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AACA;AAmDA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5EA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;;;;AApBA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AAFA;AAgBA;;;;;;;;;;;;;;;AC7BA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;AACA;;;AAqCA;AAAA;AACA;AADA;AACA;AADA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;AAlEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AAJA;AACA;AACA;AAyDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;AC5FA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAMA;AACA;AADA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AADA;AAWA;;;;AA1CA;AACA;AADA;AAEA;AACA;AAFA;AACA;AACA;AA0CA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjEA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;;;;;AACA;;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AACA;AACA;;;;AAbA;AACA;AADA;AAEA;AACA;AAFA;AACA;AACA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;AClCA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;ACvBA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;;;;;;;AACA;;;;;;;;;;;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAbA;AAkBA;;;;AAjCA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AACA;AACA;AAiCA;AAAA;AACA;AAAA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AACA;AAAA;AAeA;;;;;;;;;;;;;AChBA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AAhBA;AACA;;;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAzCA;AA2CA;;;;;;;;;;;;AClDA;AACA;AAjBA;AACA;;;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AA/CA;AAiDA;;;;;;;;;;;;ACpDA;AACA;AAtBA;AACA;;;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AApCA;AAsCA;;;;;;;;;;;;ACnDA;AACA;AAZA;AACA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACZA;AACA;AAZA;AACA;;;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AA/BA;AAiCA;;;;;;;;;;;;AC1CA;AACA;AAXA;AACA;;;AAAA;AACA;;;AAEA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAdA;AAgBA;;;;;;;;;;;;ACrBA;AACA;AATA;AACA;;;AAAA;AACA;;;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAPA;AASA;;;;;;;;;;;;;ACxBA;AACA;AACA;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;;;;;;ACJA;;;;;;ACAA;;;;;;ACAA;;;A","sourceRoot":""}